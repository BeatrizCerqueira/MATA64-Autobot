FUNCTION_BLOCK escape

VAR_INPUT				// Variáveis de entrada
	distance : REAL;
	enemy_energy : REAL;
	autobot_energy : REAL;
	enemy_gun_heat : REAL;
END_VAR

VAR_OUTPUT				// Variável de saída
	poder : REAL;		// 0 à 3
END_VAR

// Fuzzify input variable 'distance': {'close', 'medium' , 'far'}
FUZZIFY distance
	TERM close := (0, 1) (50,1) (250, 0) ;
    TERM medium := (100, 0) (250,1) (350,1) (500,0);
    TERM far := (350, 0) (500, 1) (700, 1) (850, 0);
    TERM very_far := (700, 0) (900, 1) (1000, 1);
END_FUZZIFY

// Fuzzify input variable 'enemy_energy': { 'sick', 'healthy' }
FUZZIFY enemy_energy
	TERM sick := (0,1) (20,0);
    TERM healthy := (40, 0) (100, 1);
END_FUZZIFY

// Fuzzify input variable 'autobot_energy': { 'sick', 'healthy' }
FUZZIFY autobot_energy
	TERM sick := (0,1) (20,0);
    TERM healthy := (40, 0) (100, 1);
END_FUZZIFY

// Fuzzify input variable 'enemy_gun_heat': { 'cold', 'hot' }
FUZZIFY enemy_gun_heat
    TERM cold  := (0,1) (1,0);
    TERM hot   := (2,0) (3,1);
END_FUZZIFY

// Defuzzify output variable 'life_risk' : {'low', 'high' }
DEFUZZIFY life_risk
	TERM low := 1;
	TERM high := 2;
	METHOD : COG;		// Método 'Centro da gravidade'
	DEFAULT := 1;		// Valor default 1 (se nenhuma das regras ativar o defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// É comum utilizar o método MIN para o operador AND, e o método MAX para o operador OR.
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF distancia IS perto THEN poder IS forte;
	RULE 2 : IF distancia IS media THEN poder IS normal;
	RULE 3 : IF distancia IS longe THEN poder IS fraco;

END_RULEBLOCK

END_FUNCTION_BLOCK